// üìö Interfaces ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏∑‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
// ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å backend entities: borrow.go, book_license.go, book_status.go

// ======= Borrow System Interfaces =======

// üìñ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ (Available, Borrowed, Hold)
export interface BookStatus {
  ID: number;
  CreatedAt: string;
  UpdatedAt: string;
  DeletedAt?: string;
  status_name: string; // "Available", "Borrowed", "Hold"
  book_licenses?: BookLicense[];
}

// üìÑ License ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏•‡πà‡∏° (‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢ copy ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠)
export interface BookLicense {
  ID: number;
  CreatedAt: string;
  UpdatedAt: string;
  DeletedAt?: string;
  book_license_id: string; // ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏°‡∏ô‡∏µ‡πâ
  book_id: number;
  book?: {
    ID: number;
    title: string;
    isbn: string;
    cover_image: string;
    publisher?: {
      ID: number;
      publisher_name: string;
    };
    authors?: Array<{
      ID: number;
      author_name: string;
    }>;
  };
  book_status_id: number;
  book_status?: BookStatus;
  borrows?: Borrow[];
}

// üìÖ ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
export interface Borrow {
  ID: number;
  CreatedAt: string;
  UpdatedAt: string;
  DeletedAt?: string;
  borrow_date: string; // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°
  due_date: string; // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∑‡∏ô
  return_date?: string; // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡∏à‡∏£‡∏¥‡∏á (null ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏∑‡∏ô)
  user_id: string;
  user?: {
    UserID: string;
    FirstName: string;
    LastName: string;
    Email: string;
  };
  book_license_id: number;
  book_license?: BookLicense;
  reading_activities?: Array<{
    ID: number;
    activity_date: string;
    page_read: number;
  }>;
  notifications?: Array<{
    ID: number;
    message: string;
    sent_date: string;
  }>;
}

// ======= Form Interfaces =======

// üìù ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏∑‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
export interface BorrowRequest {
  book_id: number;
  user_id: string;
  borrow_date?: string; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  due_date?: string; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏Å‡∏é‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î
}

// üìù ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
export interface ReturnRequest {
  borrow_id: number;
  return_date?: string; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
}

// ======= Response Interfaces =======

// üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
export interface BorrowWithDetails extends Borrow {
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ
  is_overdue: boolean; // ‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  days_overdue: number; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î
  days_until_due: number; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î
  can_renew: boolean; // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  fine_amount?: number; // ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
}

// üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
export interface UserBorrowsResponse {
  current_borrows: BorrowWithDetails[]; // ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°‡∏≠‡∏¢‡∏π‡πà
  borrow_history: BorrowWithDetails[]; // ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°
  overdue_count: number; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î
  total_fine: number; // ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏ß‡∏°
}

// üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°
export interface BorrowStatistics {
  total_borrows: number;
  active_borrows: number;
  overdue_borrows: number;
  returned_this_month: number;
  popular_books: Array<{
    book_id: number;
    title: string;
    borrow_count: number;
  }>;
}

// ======= Error Interfaces =======

// ‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°
export interface BorrowError {
  code: string;
  message: string;
  details?: {
    book_id?: number;
    user_id?: string;
    available_date?: string; // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏∞‡∏ß‡πà‡∏≤‡∏á
    queue_position?: number; // ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏£‡∏≠
  };
}

// ======= Utility Types =======

// üîç ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°
export interface BorrowFilter {
  user_id?: string;
  book_id?: number;
  status?: 'active' | 'returned' | 'overdue' | 'all';
  date_from?: string;
  date_to?: string;
  sort_by?: 'borrow_date' | 'due_date' | 'return_date';
  sort_order?: 'asc' | 'desc';
  page?: number;
  limit?: number;
}

// üìÑ ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤
export interface PaginatedBorrowResponse {
  data: BorrowWithDetails[];
  pagination: {
    current_page: number;
    total_pages: number;
    total_items: number;
    items_per_page: number;
  };
}
